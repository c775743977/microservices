// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"rpc/internal/logic"
	"rpc/internal/svc"
	"rpc/types/user"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServiceServer) Login(ctx context.Context, in *user.LoginReq) (*user.LoginRes, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServiceServer) Register(ctx context.Context, in *user.RegisterReq) (*user.RegisterRes, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServiceServer) GetSession(ctx context.Context, in *user.Cookie) (*user.Session, error) {
	l := logic.NewGetSessionLogic(ctx, s.svcCtx)
	return l.GetSession(in)
}

func (s *UserServiceServer) LogOut(ctx context.Context, in *user.Cookie) (*user.Cookie, error) {
	l := logic.NewLogOutLogic(ctx, s.svcCtx)
	return l.LogOut(in)
}

func (s *UserServiceServer) GetUser(ctx context.Context, in *user.UserReq) (*user.UserRes, error) {
	l := logic.NewGetUserLogic(ctx, s.svcCtx)
	return l.GetUser(in)
}

func (s *UserServiceServer) IsRoot(ctx context.Context, in *user.Cookie) (*user.RootRes, error) {
	l := logic.NewIsRootLogic(ctx, s.svcCtx)
	return l.IsRoot(in)
}

func (s *UserServiceServer) GetUserByName(ctx context.Context, in *user.UserName) (*user.UserRes, error) {
	l := logic.NewGetUserByNameLogic(ctx, s.svcCtx)
	return l.GetUserByName(in)
}

func (s *UserServiceServer) CreateCart(ctx context.Context, in *user.UserReq) (*user.UserReq, error) {
	l := logic.NewCreateCartLogic(ctx, s.svcCtx)
	return l.CreateCart(in)
}
