// Code generated by goctl. DO NOT EDIT.
// Source: cart.proto

package cartservice

import (
	"context"

	"rpc/types/cart"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BookRes         = cart.BookRes
	Cart            = cart.Cart
	CartItem        = cart.CartItem
	CartItemReq     = cart.CartItemReq
	CartReqByID     = cart.CartReqByID
	CartReqByName   = cart.CartReqByName
	CartReqByUserID = cart.CartReqByUserID
	Result          = cart.Result

	CartService interface {
		GetCartByName(ctx context.Context, in *CartReqByName, opts ...grpc.CallOption) (*Cart, error)
		GetCartByUserID(ctx context.Context, in *CartReqByUserID, opts ...grpc.CallOption) (*Cart, error)
		GetCartByID(ctx context.Context, in *CartReqByID, opts ...grpc.CallOption) (*Cart, error)
		GetCartItem(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*CartItem, error)
		CleanCart(ctx context.Context, in *CartReqByUserID, opts ...grpc.CallOption) (*Result, error)
		CleanCartItem(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error)
		AddToCart(ctx context.Context, in *Cart, opts ...grpc.CallOption) (*Result, error)
		AlterItem(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error)
		AddItem(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error)
		AddItemNum(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error)
		AlterItemNum(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error)
		DelItem(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error)
		CreateCart(ctx context.Context, in *CartReqByUserID, opts ...grpc.CallOption) (*Result, error)
	}

	defaultCartService struct {
		cli zrpc.Client
	}
)

func NewCartService(cli zrpc.Client) CartService {
	return &defaultCartService{
		cli: cli,
	}
}

func (m *defaultCartService) GetCartByName(ctx context.Context, in *CartReqByName, opts ...grpc.CallOption) (*Cart, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.GetCartByName(ctx, in, opts...)
}

func (m *defaultCartService) GetCartByUserID(ctx context.Context, in *CartReqByUserID, opts ...grpc.CallOption) (*Cart, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.GetCartByUserID(ctx, in, opts...)
}

func (m *defaultCartService) GetCartByID(ctx context.Context, in *CartReqByID, opts ...grpc.CallOption) (*Cart, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.GetCartByID(ctx, in, opts...)
}

func (m *defaultCartService) GetCartItem(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*CartItem, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.GetCartItem(ctx, in, opts...)
}

func (m *defaultCartService) CleanCart(ctx context.Context, in *CartReqByUserID, opts ...grpc.CallOption) (*Result, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.CleanCart(ctx, in, opts...)
}

func (m *defaultCartService) CleanCartItem(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.CleanCartItem(ctx, in, opts...)
}

func (m *defaultCartService) AddToCart(ctx context.Context, in *Cart, opts ...grpc.CallOption) (*Result, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.AddToCart(ctx, in, opts...)
}

func (m *defaultCartService) AlterItem(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.AlterItem(ctx, in, opts...)
}

func (m *defaultCartService) AddItem(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.AddItem(ctx, in, opts...)
}

func (m *defaultCartService) AddItemNum(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.AddItemNum(ctx, in, opts...)
}

func (m *defaultCartService) AlterItemNum(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.AlterItemNum(ctx, in, opts...)
}

func (m *defaultCartService) DelItem(ctx context.Context, in *CartItem, opts ...grpc.CallOption) (*Result, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.DelItem(ctx, in, opts...)
}

func (m *defaultCartService) CreateCart(ctx context.Context, in *CartReqByUserID, opts ...grpc.CallOption) (*Result, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.CreateCart(ctx, in, opts...)
}
