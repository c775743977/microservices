// Code generated by goctl. DO NOT EDIT.
// Source: cart.proto

package server

import (
	"context"

	"rpc/internal/logic"
	"rpc/internal/svc"
	"rpc/types/cart"
)

type CartServiceServer struct {
	svcCtx *svc.ServiceContext
	cart.UnimplementedCartServiceServer
}

func NewCartServiceServer(svcCtx *svc.ServiceContext) *CartServiceServer {
	return &CartServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *CartServiceServer) GetCartByName(ctx context.Context, in *cart.CartReqByName) (*cart.Cart, error) {
	l := logic.NewGetCartByNameLogic(ctx, s.svcCtx)
	return l.GetCartByName(in)
}

func (s *CartServiceServer) GetCartByUserID(ctx context.Context, in *cart.CartReqByUserID) (*cart.Cart, error) {
	l := logic.NewGetCartByUserIDLogic(ctx, s.svcCtx)
	return l.GetCartByUserID(in)
}

func (s *CartServiceServer) GetCartByID(ctx context.Context, in *cart.CartReqByID) (*cart.Cart, error) {
	l := logic.NewGetCartByIDLogic(ctx, s.svcCtx)
	return l.GetCartByID(in)
}

func (s *CartServiceServer) GetCartItem(ctx context.Context, in *cart.CartItem) (*cart.CartItem, error) {
	l := logic.NewGetCartItemLogic(ctx, s.svcCtx)
	return l.GetCartItem(in)
}

func (s *CartServiceServer) CleanCart(ctx context.Context, in *cart.CartReqByUserID) (*cart.Result, error) {
	l := logic.NewCleanCartLogic(ctx, s.svcCtx)
	return l.CleanCart(in)
}

func (s *CartServiceServer) CleanCartItem(ctx context.Context, in *cart.CartItem) (*cart.Result, error) {
	l := logic.NewCleanCartItemLogic(ctx, s.svcCtx)
	return l.CleanCartItem(in)
}

func (s *CartServiceServer) AddToCart(ctx context.Context, in *cart.Cart) (*cart.Result, error) {
	l := logic.NewAddToCartLogic(ctx, s.svcCtx)
	return l.AddToCart(in)
}

func (s *CartServiceServer) AlterItem(ctx context.Context, in *cart.CartItem) (*cart.Result, error) {
	l := logic.NewAlterItemLogic(ctx, s.svcCtx)
	return l.AlterItem(in)
}

func (s *CartServiceServer) AddItem(ctx context.Context, in *cart.CartItem) (*cart.Result, error) {
	l := logic.NewAddItemLogic(ctx, s.svcCtx)
	return l.AddItem(in)
}

func (s *CartServiceServer) AddItemNum(ctx context.Context, in *cart.CartItem) (*cart.Result, error) {
	l := logic.NewAddItemNumLogic(ctx, s.svcCtx)
	return l.AddItemNum(in)
}

func (s *CartServiceServer) AlterItemNum(ctx context.Context, in *cart.CartItem) (*cart.Result, error) {
	l := logic.NewAlterItemNumLogic(ctx, s.svcCtx)
	return l.AlterItemNum(in)
}

func (s *CartServiceServer) DelItem(ctx context.Context, in *cart.CartItem) (*cart.Result, error) {
	l := logic.NewDelItemLogic(ctx, s.svcCtx)
	return l.DelItem(in)
}

func (s *CartServiceServer) CreateCart(ctx context.Context, in *cart.CartReqByUserID) (*cart.Result, error) {
	l := logic.NewCreateCartLogic(ctx, s.svcCtx)
	return l.CreateCart(in)
}
